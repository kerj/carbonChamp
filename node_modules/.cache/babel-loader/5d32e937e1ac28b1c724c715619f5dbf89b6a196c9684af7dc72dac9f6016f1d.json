{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Search.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    data,\n    loading,\n    error\n  } = useStreamCustomersByFnSubscription({\n    variables: {\n      fn_ilike: searchTerm\n    }\n  });\n  const poolData = useS([]);\n  const handleChange = e => {\n    setSearchTerm(`${e.target.value}%`);\n  };\n  if (data) {\n    if (loading) {} else {\n      poolData.current = [...poolData.current, ...(data ? data === null || data === void 0 ? void 0 : data.customers_stream : [])];\n    }\n    console.log(poolData, data);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(StreamTable, {\n      data: poolData.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"tlLCai7CX/HlUE4JhaARASyfEv4=\", true, function () {\n  return [useStreamCustomersByFnSubscription];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useStreamCustomersByFnSubscription","StreamTable","Search","searchTerm","setSearchTerm","data","loading","error","variables","fn_ilike","poolData","useS","handleChange","e","target","value","current","customers_stream","console","log"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Search.tsx"],"sourcesContent":["import { useState, useRef } from 'react'\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\n\n\nexport const Search = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const { data, loading, error } = useStreamCustomersByFnSubscription({\n    variables: { fn_ilike: searchTerm },\n  })\n  const poolData = useS<any>([]);\n  const handleChange = (e: any) => {\n    setSearchTerm(`${e.target.value}%`);\n  }\n\n\n\n  if (data) {\n    if (loading) {\n      \n    } else {\n      poolData.current = ([...poolData.current, ...(data ? data?.customers_stream : [])])\n    }\n    console.log(poolData, data)\n  }\n\n  return (\n    <>\n      <input\n        onChange={handleChange}\n      />\n      {data &&\n        <StreamTable data={poolData.current} />\n\n      }\n    </>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAgB,OAAO;AACxC,SAASC,kCAAkC,QAAQ,sBAAsB;AACzE,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAGxC,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM;IAAEM,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGP,kCAAkC,CAAC;IAClEQ,SAAS,EAAE;MAAEC,QAAQ,EAAEN;IAAW;EACpC,CAAC,CAAC;EACF,MAAMO,QAAQ,GAAGC,IAAI,CAAM,EAAE,CAAC;EAC9B,MAAMC,YAAY,GAAIC,CAAM,IAAK;IAC/BT,aAAa,CAAE,GAAES,CAAC,CAACC,MAAM,CAACC,KAAM,GAAE,CAAC;EACrC,CAAC;EAID,IAAIV,IAAI,EAAE;IACR,IAAIC,OAAO,EAAE,CAEb,CAAC,MAAM;MACLI,QAAQ,CAACM,OAAO,GAAI,CAAC,GAAGN,QAAQ,CAACM,OAAO,EAAE,IAAIX,IAAI,GAAGA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,gBAAgB,GAAG,EAAE,CAAC,CAAE;IACrF;IACAC,OAAO,CAACC,GAAG,CAACT,QAAQ,EAAEL,IAAI,CAAC;EAC7B;EAEA,oBACE;IAAA,wBACE;MACE,QAAQ,EAAEO;IAAa;MAAA;MAAA;MAAA;IAAA,QACvB,EACDP,IAAI,iBACH,QAAC,WAAW;MAAC,IAAI,EAAEK,QAAQ,CAACM;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAGxC;AAEP,CAAC;AAAA,GAhCYd,MAAM;EAAA,QAEgBF,kCAAkC;AAAA;AAAA,KAFxDE,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}