{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Table.tsx\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useGetCustomersLikeNameQuery } from '../generated/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"];\nexport const Table = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    refetch\n  } = _ref;\n  const [results, setResults] = useState();\n  const {\n    data\n  } = useGetCustomersLikeNameQuery({\n    fetchPolicy: 'network-only',\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  const headers = results !== null && results !== void 0 && results.customers[0] ? Object.keys(results.customers[0]) : [];\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      data\n    } = useGetCustomersLikeNameQuery({\n      fetchPolicy: 'network-only',\n      variables: {\n        limit: 19,\n        first_name_term: \"Le%\"\n      }\n    });\n    setResults(data);\n  }, \"vbyUbzGrFSc1iX2G/R9NU0uK7Ms=\", false, function () {\n    return [useGetCustomersLikeNameQuery];\n  }), [data, refetch]), \"vbyUbzGrFSc1iX2G/R9NU0uK7Ms=\", false, function () {\n    return [useGetCustomersLikeNameQuery];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableContainer\",\n    style: {\n      color: 'black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: headers.map((header, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results && ((results === null || results === void 0 ? void 0 : results.customers) || []).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((header, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: row[header]\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s2(Table, \"OOORT5gkxNOGFWWrx0MsBTyFQN8=\", false, function () {\n  return [useGetCustomersLikeNameQuery];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["useEffect","useState","useGetCustomersLikeNameQuery","Headers","Table","refetch","results","setResults","data","fetchPolicy","variables","limit","first_name_term","headers","customers","Object","keys","color","map","header","i","row","index","ind"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Table.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { GetCustomersLikeNameQuery, useGetCustomersLikeNameQuery } from '../generated/graphql';\n\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"] as const;\ntype HeadersTuple = typeof Headers;\ntype Header = HeadersTuple[number]\n\nexport const Table = ({ refetch }: { refetch: boolean }) => {\n  const [results, setResults] = useState<GetCustomersLikeNameQuery>()\n  const { data } = useGetCustomersLikeNameQuery({\n    fetchPolicy: 'network-only',\n    variables: { limit: 19, first_name_term: \"Le%\" }\n  });\n  const headers: Header[] = results?.customers[0] ? Object.keys(results.customers[0]) as Header[] : [];\n\n  useEffect(() => {\n    const { data } = useGetCustomersLikeNameQuery({\n      fetchPolicy: 'network-only',\n      variables: { limit: 19, first_name_term: \"Le%\" }\n    });\n    setResults(data);\n  }, [data, refetch])\n\n  return (\n    <div className='tableContainer' style={{ color: 'black' }}>\n      {\n        <table className='table'>\n          <thead>\n            <tr className='tr'>\n              {headers.map((header, i) => (<th key={i}>{header}</th>))}\n            </tr>\n          </thead>\n          <tbody>\n            {results &&\n              (results?.customers || []).map((row, index: number) => (\n                <tr key={index}>\n                  {headers.map((header, ind) => (\n                    <td key={ind} className=\"td\">\n                      {row[header]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      }\n    </div>\n  )\n}\n\nexport default Table;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAAoCC,4BAA4B,QAAQ,sBAAsB;AAAC;AAE/F,MAAMC,OAAO,GAAG,CAAC,eAAe,EAAE,YAAY,EAAE,WAAW,CAAU;AAIrE,OAAO,MAAMC,KAAK,GAAG,QAAuC;EAAA;EAAA;EAAA,IAAtC;IAAEC;EAA8B,CAAC;EACrD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,EAA6B;EACnE,MAAM;IAAEO;EAAK,CAAC,GAAGN,4BAA4B,CAAC;IAC5CO,WAAW,EAAE,cAAc;IAC3BC,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EACF,MAAMC,OAAiB,GAAGP,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEQ,SAAS,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACV,OAAO,CAACQ,SAAS,CAAC,CAAC,CAAC,CAAC,GAAe,EAAE;EAEpG,GAAAd,SAAS,IAAC,MAAM;IAAA;IACd,MAAM;MAAEQ;IAAK,CAAC,GAAGN,4BAA4B,CAAC;MAC5CO,WAAW,EAAE,cAAc;MAC3BC,SAAS,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAM;IACjD,CAAC,CAAC;IACFL,UAAU,CAACC,IAAI,CAAC;EAClB,CAAC;IAAA,QALkBN,4BAA4B;EAAA,IAK5C,CAACM,IAAI,EAAEH,OAAO,CAAC,CAAC;IAAA,QALAH,4BAA4B;EAAA;EAO/C,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAC,KAAK,EAAE;MAAEe,KAAK,EAAE;IAAQ,CAAE;IAAA,uBAEtD;MAAO,SAAS,EAAC,OAAO;MAAA,wBACtB;QAAA,uBACE;UAAI,SAAS,EAAC,IAAI;UAAA,UACfJ,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAAM;YAAA,UAAaD;UAAM,GAAVC,CAAC;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAC;UAAA;UAAA;UAAA;QAAA;MACrD;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGd,OAAO,IACN,CAAC,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,SAAS,KAAI,EAAE,EAAEI,GAAG,CAAC,CAACG,GAAG,EAAEC,KAAa,kBAChD;UAAA,UACGT,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEI,GAAG,kBACvB;YAAc,SAAS,EAAC,IAAI;YAAA,UACzBF,GAAG,CAACF,MAAM;UAAC,GADLI,GAAG;YAAA;YAAA;YAAA;UAAA,QAGb;QAAC,GALKD,KAAK;UAAA;UAAA;UAAA;QAAA,QAOf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEN;AAEV,CAAC;AAAA,IA1CYlB,KAAK;EAAA,QAECF,4BAA4B;AAAA;AAAA,KAFlCE,KAAK;AA4ClB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}