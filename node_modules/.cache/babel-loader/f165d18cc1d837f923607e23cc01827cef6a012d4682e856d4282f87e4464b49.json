{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Display.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport { useGetData } from '../hooks/useGetData';\nimport { CallbackButton } from './CallbackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchGraphQL(operationsDoc, operationName, variables) {\n  const result = await fetch(\"http://localhost:8080/v1/graphql\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      query: operationsDoc,\n      variables: variables,\n      operationName: operationName\n    })\n  });\n  return await result.json();\n}\nconst operationsDoc = `\n  query GetCustomers {\n    customers(limit: 10) {\n      email_address\n      first_name\n      last_name\n    }\n  }\n`;\nfunction fetchGetCustomers() {\n  return fetchGraphQL(operationsDoc, \"GetCustomers\", {});\n}\nasync function startFetchGetCustomers() {\n  const {\n    errors,\n    data\n  } = await fetchGetCustomers();\n  if (errors) {\n    console.error(errors);\n  }\n  // do something great with this precious data\n  return data.data.customers;\n}\nexport const Display = _ref => {\n  _s();\n  let {\n    url\n  } = _ref;\n  const [res, setRes] = React.useState(null);\n  const value = startFetchGetCustomers;\n  const results = useGetData(url);\n  const headers = results ? Object.keys(results[0]) : [];\n  const onAdd = () => {\n    const url = 'http://localhost:3000/addcustomer';\n    const options = {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        customerId: \"this-is-a-customerId\",\n        email: \"test@test.com\",\n        first_name: \"Lebron\",\n        last_name: \"James\"\n      })\n    };\n    fetch(url, options);\n  };\n  const onRemove = () => {\n    const url = 'http://localhost:3000/removecustomer';\n    const options = {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        customerId: \"this-is-a-customerId\"\n      })\n    };\n    fetch(url, options);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onAdd,\n      text: \"Add test Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onRemove,\n      text: \"remove test Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableContainer\",\n      style: {\n        color: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tr\",\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: (res || []).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: headers.map((header, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"td\",\n              children: row[header]\n            }, ind, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 23\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"ADZMhceh4kFDVpPz14nX20XX4IY=\", false, function () {\n  return [useGetData];\n});\n_c = Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useGetData","CallbackButton","fetchGraphQL","operationsDoc","operationName","variables","result","fetch","method","body","JSON","stringify","query","json","fetchGetCustomers","startFetchGetCustomers","errors","data","console","error","customers","Display","url","res","setRes","useState","value","results","headers","Object","keys","onAdd","options","customerId","email","first_name","last_name","onRemove","color","map","header","row","index","ind"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Display.tsx"],"sourcesContent":["import React from 'react'\nimport '../App.css';\nimport { useGetData } from '../hooks/useGetData';\nimport { CallbackButton } from './CallbackButton';\n\nasync function fetchGraphQL(operationsDoc: any, operationName: any, variables: any) {\n  const result = await fetch(\n    \"http://localhost:8080/v1/graphql\",\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        query: operationsDoc,\n        variables: variables,\n        operationName: operationName\n      })\n    }\n  );\n\n  return await result.json();\n}\n\nconst operationsDoc = `\n  query GetCustomers {\n    customers(limit: 10) {\n      email_address\n      first_name\n      last_name\n    }\n  }\n`;\n\nfunction fetchGetCustomers() {\n  return fetchGraphQL(\n    operationsDoc,\n    \"GetCustomers\",\n    {}\n  );\n}\n\nasync function startFetchGetCustomers() {\n  const { errors, data } = await fetchGetCustomers();\n\n  if (errors) {\n    console.error(errors);\n  }\n  // do something great with this precious data\n  return data.data.customers;\n}\n\n\nexport const Display = ({ url }: { url: string }) => {\n  const [res, setRes] = React.useState(null);\n\n  const value = startFetchGetCustomers\n  const results = useGetData(url);\n  const headers: any[] = results ? Object.keys(results[0]) : [];\n  const onAdd = () => {\n    const url = 'http://localhost:3000/addcustomer'\n    const options = {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        customerId: \"this-is-a-customerId\",\n        email: \"test@test.com\",\n        first_name: \"Lebron\",\n        last_name: \"James\",\n      })\n    }\n\n    fetch(url, options)\n  }\n\n  const onRemove = () => {\n    const url = 'http://localhost:3000/removecustomer'\n    const options = {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        customerId: \"this-is-a-customerId\",\n      })\n    }\n\n    fetch(url, options)\n  }\n\n  return (\n    <>\n      <CallbackButton callback={onAdd} text=\"Add test Customer\" />\n      <CallbackButton callback={onRemove} text=\"remove test Customer\" />\n      <div className='tableContainer' style={{ color: 'black' }}>\n        {\n          <table className='table'>\n            <thead>\n              <tr className='tr'>\n                {headers.map(header => (<th>{header}</th>))}\n              </tr>\n            </thead>\n            <tbody>\n              {\n                (res || []).map((row, index) => (\n                  <tr key={index}>\n                    {headers.map((header, ind) => (\n                      <td key={ind} className=\"td\">\n                        {row[header]}\n                      </td>\n                    ))}\n                  </tr>\n                ))\n              }\n            </tbody>\n          </table>\n        }\n      </div>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}