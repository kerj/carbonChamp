{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/App.tsx\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { Display } from \"./components/Display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"http://localhost:8080/v1/graphql\"\n  })\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Display, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ApolloProvider","ApolloClient","InMemoryCache","HttpLink","Display","client","cache","link","uri","App"],"sources":["/Users/kerj/Projects/gql-hasura/src/App.tsx"],"sourcesContent":["\nimport { ApolloProvider, ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client\";\nimport { ContextType, Display } from \"./components/Display\";\nimport { DataProvider } from \"./Context/DataContext\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"http://localhost:8080/v1/graphql\"\n  })\n})\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        {/* <DataProvider<ContextType>\n        requestMetas={{\n        url: \"http://localhost:8080/v1/graphql\",\n        options: {\n          method: \"post\",\n          data: JSON.stringify({\n            query: `\n              query GetCustomers {\n                customers(limit: 19, where: {first_name: {_like: \"Le%\"}}) {\n                  email_address\n                  first_name\n                  last_name\n                }\n              }\n            `,\n            operationName: \"GetCustomers\"\n          })\n        }\n        }}\n        > */}\n          <Display />\n        {/* </DataProvider> */}\n\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AACA,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,gBAAgB;AACtF,SAAsBC,OAAO,QAAQ,sBAAsB;AAAC;AAG5D,MAAMC,MAAM,GAAG,IAAIJ,YAAY,CAAC;EAC9BK,KAAK,EAAE,IAAIJ,aAAa,EAAE;EAC1BK,IAAI,EAAE,IAAIJ,QAAQ,CAAC;IACjBK,GAAG,EAAE;EACP,CAAC;AACH,CAAC,CAAC;AAEF,SAASC,GAAG,GAAG;EACb,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,cAAc;MAAC,MAAM,EAAEJ,MAAO;MAAA,uBAqB3B,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAGE;IAAA;IAAA;IAAA;EAAA,QACb;AAEV;AAAC,KA9BQI,GAAG;AAgCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}