{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    data\n  } = useStreamCustomersByFnSubscription({\n    variables: {\n      fn_ilike: searchTerm\n    }\n  });\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StreamTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"TBqmj0maMZGXlKju5kEWFgOebt0=\", false, function () {\n  return [useStreamCustomersByFnSubscription];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useStreamCustomersByFnSubscription","StreamTable","Search","searchTerm","setSearchTerm","data","variables","fn_ilike","handleChange","e","target","value"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Search.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\n\n\nexport const Search = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const { data } = useStreamCustomersByFnSubscription({\n    variables: { fn_ilike: searchTerm }\n  })\n\n  \n\n  const handleChange = (e: any) => {\n    setSearchTerm(e.target.value)\n  }\n\n  return (\n    <>\n      <input\n        onChange={handleChange}\n      />\n      <StreamTable data={data} />\n    </>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,kCAAkC,QAAQ,sBAAsB;AACzE,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAGxC,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM;IAAEM;EAAK,CAAC,GAAGL,kCAAkC,CAAC;IAClDM,SAAS,EAAE;MAAEC,QAAQ,EAAEJ;IAAW;EACpC,CAAC,CAAC;EAIF,MAAMK,YAAY,GAAIC,CAAM,IAAK;IAC/BL,aAAa,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,oBACE;IAAA,wBACE;MACE,QAAQ,EAAEH;IAAa;MAAA;MAAA;MAAA;IAAA,QACvB,eACF,QAAC,WAAW;MAAC,IAAI,EAAEH;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAC1B;AAEP,CAAC;AAAA,GApBYH,MAAM;EAAA,QAEAF,kCAAkC;AAAA;AAAA,KAFxCE,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}