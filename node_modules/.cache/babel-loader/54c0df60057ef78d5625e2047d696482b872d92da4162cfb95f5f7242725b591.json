{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Search.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    data,\n    loading\n  } = useStreamCustomersByFnSubscription({\n    variables: {\n      fn_ilike: searchTerm\n    }\n  });\n  const [poolData, setPoolData] = useState([]);\n  const handleChange = e => {\n    setSearchTerm(`${e.target.value}%`);\n  };\n  useEffect(() => {\n    if (!loading) {}\n    setPoolData([...poolData, ...(data ? data === null || data === void 0 ? void 0 : data.customers_stream : [])]);\n  }, [loading, data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data && /*#__PURE__*/_jsxDEV(StreamTable, {\n      data: poolData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Search, \"K1MQjgdj4l51dlaM1CPjJIVKBeU=\", false, function () {\n  return [useStreamCustomersByFnSubscription];\n});\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useEffect","useState","useStreamCustomersByFnSubscription","StreamTable","Search","searchTerm","setSearchTerm","data","loading","variables","fn_ilike","poolData","setPoolData","handleChange","e","target","value","customers_stream"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Search.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useStreamCustomersByFnSubscription } from '../generated/graphql';\nimport StreamTable from './StreamTable';\n\n\nexport const Search = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const { data, loading } = useStreamCustomersByFnSubscription({\n    variables: { fn_ilike: searchTerm },\n  })\n  const [poolData, setPoolData] = useState<any>([]);\n  const handleChange = (e: any) => {\n    setSearchTerm(`${e.target.value}%`);\n  }\n\n  useEffect(() => {\n    if (!loading) {\n      \n    }\n    setPoolData([...poolData, ...(data ? data?.customers_stream : [])])\n\n  }, [loading, data])\n\n\n\n  return (\n    <>\n      <input\n        onChange={handleChange}\n      />\n      {data &&\n        <StreamTable data={poolData} />\n\n      }\n    </>\n  )\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,kCAAkC,QAAQ,sBAAsB;AACzE,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAGxC,OAAO,MAAMC,MAAM,GAAG,MAAM;EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAS,EAAE,CAAC;EACxD,MAAM;IAAEM,IAAI;IAAEC;EAAQ,CAAC,GAAGN,kCAAkC,CAAC;IAC3DO,SAAS,EAAE;MAAEC,QAAQ,EAAEL;IAAW;EACpC,CAAC,CAAC;EACF,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAM,EAAE,CAAC;EACjD,MAAMY,YAAY,GAAIC,CAAM,IAAK;IAC/BR,aAAa,CAAE,GAAEQ,CAAC,CAACC,MAAM,CAACC,KAAM,GAAE,CAAC;EACrC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACQ,OAAO,EAAE,CAEd;IACAI,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE,IAAIJ,IAAI,GAAGA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU,gBAAgB,GAAG,EAAE,CAAC,CAAC,CAAC;EAErE,CAAC,EAAE,CAACT,OAAO,EAAED,IAAI,CAAC,CAAC;EAInB,oBACE;IAAA,wBACE;MACE,QAAQ,EAAEM;IAAa;MAAA;MAAA;MAAA;IAAA,QACvB,EACDN,IAAI,iBACH,QAAC,WAAW;MAAC,IAAI,EAAEI;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAGhC;AAEP,CAAC;AAAA,GA/BYP,MAAM;EAAA,QAESF,kCAAkC;AAAA;AAAA,KAFjDE,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}