{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Display.tsx\",\n  _s = $RefreshSig$();\nimport { lazy, useState } from 'react';\nimport '../App.css';\nimport { useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameQuery } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LazyTable = /*#__PURE__*/lazy(_c = () => import('./Table'));\n_c2 = LazyTable;\nexport const Display = () => {\n  _s();\n  const {\n    data\n  } = useGetCustomersLikeNameQuery({\n    fetchPolicy: 'network-only',\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  const [refetch, setRefetch] = useState(false);\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only'\n  });\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\"\n  });\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    }).then(() => setRefetch(true));\n  };\n  const onRemove = () => {\n    deleteCustomerByPkMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\"\n      }\n    }).then(() => setRefetch(true));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onAdd,\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onRemove,\n      text: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LazyTable, {\n      refetch: refetch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"Pjp10KJmE+e+YBJ395Aiup07YG8=\", false, function () {\n  return [useGetCustomersLikeNameQuery, useDeleteCustomerByPkMutation, useCreateCustomerMutation];\n});\n_c3 = Display;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LazyTable$lazy\");\n$RefreshReg$(_c2, \"LazyTable\");\n$RefreshReg$(_c3, \"Display\");","map":{"version":3,"names":["lazy","useState","useCreateCustomerMutation","useDeleteCustomerByPkMutation","useGetCustomersLikeNameQuery","CallbackButton","LazyTable","Display","data","fetchPolicy","variables","limit","first_name_term","refetch","setRefetch","deleteCustomerByPkMutation","createCustomerMutation","onAdd","customer_id","email_address","last_name","first_name","then","onRemove"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Display.tsx"],"sourcesContent":["import { lazy, Suspense, useState } from 'react'\nimport '../App.css';\nimport { useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameQuery } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nconst LazyTable = lazy(() => import('./Table'))\n\nexport type ContextType = {\n  data: {\n    data: {\n      customers: { email_address: string, first_name: string, last_name: string }[]\n    }\n  }\n}\n\nexport const Display = () => {\n  const { data } = useGetCustomersLikeNameQuery({\n    fetchPolicy: 'network-only',\n    variables: { limit: 19, first_name_term: \"Le%\" }\n  });\n  const [refetch, setRefetch] = useState<boolean>(false)\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n\n  })\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n  })\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    }).then(() => setRefetch(true))\n  }\n\n  const onRemove = () => {\n    deleteCustomerByPkMutation({ variables: { customer_id: \"this-is-a-customerId\" } }).then(() => setRefetch(true))\n  }\n\n  return (\n    <>\n      <CallbackButton callback={onAdd} text=\"Add\"></CallbackButton>\n      <CallbackButton callback={onRemove} text=\"remove\"></CallbackButton>\n\n        <LazyTable refetch={refetch} />\n\n    </>\n  )\n}\n"],"mappings":";;AAAA,SAASA,IAAI,EAAYC,QAAQ,QAAQ,OAAO;AAChD,OAAO,YAAY;AACnB,SAASC,yBAAyB,EAAEC,6BAA6B,EAAEC,4BAA4B,QAAQ,sBAAsB;AAC7H,SAASC,cAAc,QAAQ,kBAAkB;AAAC;AAAA;AAClD,MAAMC,SAAS,gBAAGN,IAAI,MAAC,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC;AAAA,MAAzCM,SAAS;AAUf,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGJ,4BAA4B,CAAC;IAC5CK,WAAW,EAAE,cAAc;IAC3BC,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EACtD,MAAM,CAACc,0BAA0B,CAAC,GAAGZ,6BAA6B,CAAC;IACjEM,WAAW,EAAE;EAEf,CAAC,CAAC;EACF,MAAM,CAACO,sBAAsB,CAAC,GAAGd,yBAAyB,CAAC;IACzDO,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMQ,KAAK,GAAG,MAAM;IAClBD,sBAAsB,CAAC;MACrBN,SAAS,EAAE;QACTQ,WAAW,EAAE,sBAAsB;QACnCC,aAAa,EAAE,eAAe;QAC9BC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE;MACd;IACF,CAAC,CAAC,CAACC,IAAI,CAAC,MAAMR,UAAU,CAAC,IAAI,CAAC,CAAC;EACjC,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAM;IACrBR,0BAA0B,CAAC;MAAEL,SAAS,EAAE;QAAEQ,WAAW,EAAE;MAAuB;IAAE,CAAC,CAAC,CAACI,IAAI,CAAC,MAAMR,UAAU,CAAC,IAAI,CAAC,CAAC;EACjH,CAAC;EAED,oBACE;IAAA,wBACE,QAAC,cAAc;MAAC,QAAQ,EAAEG,KAAM;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7D,QAAC,cAAc;MAAC,QAAQ,EAAEM,QAAS;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAkB,eAEjE,QAAC,SAAS;MAAC,OAAO,EAAEV;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAEhC;AAEP,CAAC;AAAA,GArCYN,OAAO;EAAA,QACDH,4BAA4B,EAKRD,6BAA6B,EAIjCD,yBAAyB;AAAA;AAAA,MAV/CK,OAAO;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}