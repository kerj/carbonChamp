{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Display.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport '../App.css';\nimport { useCreateCustomerMutation, useDeleteCustomerByPkMutation, useSubGetCustomersLikeNameSubscription } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Table } from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Display = () => {\n  _s();\n  // const [getCustomers, { data, loading }] = useGetCustomersLikeNameLazyQuery({\n  //   fetchPolicy: 'network-only',\n  //   variables: { limit: 19, first_name_term: \"Le%\" },\n  // });\n  const {\n    data\n  } = useSubGetCustomersLikeNameSubscription({\n    variables: {\n      limit: 19,\n      fn_like: \"Le%\"\n    }\n  });\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n    onCompleted: () => getCustomers()\n  });\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n    onCompleted: () => getCustomers()\n  });\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    });\n  };\n  const onRemove = () => {\n    deleteCustomerByPkMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\"\n      }\n    });\n  };\n  useEffect(() => {\n    // init\n    if (!data && !loading) {\n      getCustomers();\n    }\n  }, [data, getCustomers, loading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onAdd,\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onRemove,\n      text: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"tKg3FEpD05cKl1awisysfdLDoP8=\", false, function () {\n  return [useSubGetCustomersLikeNameSubscription, useDeleteCustomerByPkMutation, useCreateCustomerMutation];\n});\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useEffect","useCreateCustomerMutation","useDeleteCustomerByPkMutation","useSubGetCustomersLikeNameSubscription","CallbackButton","Table","Display","data","variables","limit","fn_like","deleteCustomerByPkMutation","fetchPolicy","onCompleted","getCustomers","createCustomerMutation","onAdd","customer_id","email_address","last_name","first_name","onRemove","loading"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Display.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport '../App.css';\nimport { useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameLazyQuery, useSubGetCustomersLikeNameSubscription } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Table } from './Table';\n\nexport type ContextType = {\n  data: {\n    data: {\n      customers: { email_address: string, first_name: string, last_name: string }[]\n    }\n  }\n}\n\nexport const Display = () => {\n  // const [getCustomers, { data, loading }] = useGetCustomersLikeNameLazyQuery({\n  //   fetchPolicy: 'network-only',\n  //   variables: { limit: 19, first_name_term: \"Le%\" },\n  // });\n  const { data } = useSubGetCustomersLikeNameSubscription({\n    variables: { limit: 19, fn_like: \"Le%\" },\n  })\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n    onCompleted: () => getCustomers()\n  })\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n    onCompleted: () => getCustomers()\n  })\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    })\n  }\n  const onRemove = () => {\n    deleteCustomerByPkMutation({ variables: { customer_id: \"this-is-a-customerId\" } })\n  }\n\n  useEffect(() => {\n    // init\n    if (!data && !loading) {\n      getCustomers()\n    }\n  }, [data, getCustomers, loading])\n\n  return (\n    <>\n      <CallbackButton callback={onAdd} text=\"Add\"></CallbackButton>\n      <CallbackButton callback={onRemove} text=\"remove\"></CallbackButton>\n      <Table data={data} />\n    </>\n  )\n}\n\nexport default Display;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,YAAY;AACnB,SAASC,yBAAyB,EAAEC,6BAA6B,EAAoCC,sCAAsC,QAAQ,sBAAsB;AACzK,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,KAAK,QAAQ,SAAS;AAAC;AAAA;AAUhC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B;EACA;EACA;EACA;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGJ,sCAAsC,CAAC;IACtDK,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAM;EACzC,CAAC,CAAC;EACF,MAAM,CAACC,0BAA0B,CAAC,GAAGT,6BAA6B,CAAC;IACjEU,WAAW,EAAE,cAAc;IAC3BC,WAAW,EAAE,MAAMC,YAAY;EACjC,CAAC,CAAC;EACF,MAAM,CAACC,sBAAsB,CAAC,GAAGd,yBAAyB,CAAC;IACzDW,WAAW,EAAE,cAAc;IAC3BC,WAAW,EAAE,MAAMC,YAAY;EACjC,CAAC,CAAC;EACF,MAAME,KAAK,GAAG,MAAM;IAClBD,sBAAsB,CAAC;MACrBP,SAAS,EAAE;QACTS,WAAW,EAAE,sBAAsB;QACnCC,aAAa,EAAE,eAAe;QAC9BC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAM;IACrBV,0BAA0B,CAAC;MAAEH,SAAS,EAAE;QAAES,WAAW,EAAE;MAAuB;IAAE,CAAC,CAAC;EACpF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACO,IAAI,IAAI,CAACe,OAAO,EAAE;MACrBR,YAAY,EAAE;IAChB;EACF,CAAC,EAAE,CAACP,IAAI,EAAEO,YAAY,EAAEQ,OAAO,CAAC,CAAC;EAEjC,oBACE;IAAA,wBACE,QAAC,cAAc;MAAC,QAAQ,EAAEN,KAAM;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7D,QAAC,cAAc;MAAC,QAAQ,EAAEK,QAAS;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAkB,eACnE,QAAC,KAAK;MAAC,IAAI,EAAEd;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACpB;AAEP,CAAC;AAAA,GA5CYD,OAAO;EAAA,QAKDH,sCAAsC,EAGlBD,6BAA6B,EAIjCD,yBAAyB;AAAA;AAAA,KAZ/CK,OAAO;AA8CpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}