{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Display.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../App.css';\nimport { useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameLazyQuery } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Table } from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Display = () => {\n  _s();\n  const [getCustomers, {\n    data = {\n      customers: []\n    }\n  }] = useGetCustomersLikeNameLazyQuery({\n    fetchPolicy: 'network-only',\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  const [results, setResults] = useState(data);\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n    onCompleted: () => getCustomers().then(res => (res === null || res === void 0 ? void 0 : res.data) && setResults(res.data))\n  });\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n    onCompleted: () => getCustomers().then(res => (res === null || res === void 0 ? void 0 : res.data) && setResults(res.data))\n  });\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    });\n  };\n  const onRemove = () => {\n    deleteCustomerByPkMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\"\n      }\n    });\n  };\n  console.log(results);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onAdd,\n      text: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CallbackButton, {\n      callback: onRemove,\n      text: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"mEEsOKn3Q/F6MrxxRqwmtvOI9bk=\", false, function () {\n  return [useGetCustomersLikeNameLazyQuery, useDeleteCustomerByPkMutation, useCreateCustomerMutation];\n});\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useState","useCreateCustomerMutation","useDeleteCustomerByPkMutation","useGetCustomersLikeNameLazyQuery","CallbackButton","Table","Display","getCustomers","data","customers","fetchPolicy","variables","limit","first_name_term","results","setResults","deleteCustomerByPkMutation","onCompleted","then","res","createCustomerMutation","onAdd","customer_id","email_address","last_name","first_name","onRemove","console","log"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Display.tsx"],"sourcesContent":["import { lazy, Suspense, useState } from 'react'\nimport '../App.css';\nimport { GetCustomersLikeNameQuery, useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameLazyQuery } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Table } from './Table';\n\nexport type ContextType = {\n  data: {\n    data: {\n      customers: { email_address: string, first_name: string, last_name: string }[]\n    }\n  }\n}\n\nexport const Display = () => {\n  const [getCustomers, { data = { customers: [] } }] = useGetCustomersLikeNameLazyQuery({\n    fetchPolicy: 'network-only',\n    variables: { limit: 19, first_name_term: \"Le%\" }\n  });\n  const [results, setResults] = useState<GetCustomersLikeNameQuery>(data)\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n    onCompleted: () => getCustomers().then(res => res?.data && setResults(res.data))\n  })\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n    onCompleted: () => getCustomers().then(res => res?.data && setResults(res.data))\n  })\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      }\n    })\n  }\n\n  const onRemove = () => {\n    deleteCustomerByPkMutation({ variables: { customer_id: \"this-is-a-customerId\" } })\n  }\n  console.log(results)\n  return (\n    <>\n      <CallbackButton callback={onAdd} text=\"Add\"></CallbackButton>\n      <CallbackButton callback={onRemove} text=\"remove\"></CallbackButton>\n      {\n        <Table data={results} />\n\n      }\n    </>\n  )\n}\n\nexport default Display;"],"mappings":";;AAAA,SAAyBA,QAAQ,QAAQ,OAAO;AAChD,OAAO,YAAY;AACnB,SAAoCC,yBAAyB,EAAEC,6BAA6B,EAAEC,gCAAgC,QAAQ,sBAAsB;AAC5J,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,KAAK,QAAQ,SAAS;AAAC;AAAA;AAUhC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,YAAY,EAAE;IAAEC,IAAI,GAAG;MAAEC,SAAS,EAAE;IAAG;EAAE,CAAC,CAAC,GAAGN,gCAAgC,CAAC;IACpFO,WAAW,EAAE,cAAc;IAC3BC,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAA4BQ,IAAI,CAAC;EACvE,MAAM,CAACQ,0BAA0B,CAAC,GAAGd,6BAA6B,CAAC;IACjEQ,WAAW,EAAE,cAAc;IAC3BO,WAAW,EAAE,MAAMV,YAAY,EAAE,CAACW,IAAI,CAACC,GAAG,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEX,IAAI,KAAIO,UAAU,CAACI,GAAG,CAACX,IAAI,CAAC;EACjF,CAAC,CAAC;EACF,MAAM,CAACY,sBAAsB,CAAC,GAAGnB,yBAAyB,CAAC;IACzDS,WAAW,EAAE,cAAc;IAC3BO,WAAW,EAAE,MAAMV,YAAY,EAAE,CAACW,IAAI,CAACC,GAAG,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEX,IAAI,KAAIO,UAAU,CAACI,GAAG,CAACX,IAAI,CAAC;EACjF,CAAC,CAAC;EACF,MAAMa,KAAK,GAAG,MAAM;IAClBD,sBAAsB,CAAC;MACrBT,SAAS,EAAE;QACTW,WAAW,EAAE,sBAAsB;QACnCC,aAAa,EAAE,eAAe;QAC9BC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrBV,0BAA0B,CAAC;MAAEL,SAAS,EAAE;QAAEW,WAAW,EAAE;MAAuB;IAAE,CAAC,CAAC;EACpF,CAAC;EACDK,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;EACpB,oBACE;IAAA,wBACE,QAAC,cAAc;MAAC,QAAQ,EAAEO,KAAM;MAAC,IAAI,EAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7D,QAAC,cAAc;MAAC,QAAQ,EAAEK,QAAS;MAAC,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAkB,eAEjE,QAAC,KAAK;MAAC,IAAI,EAAEZ;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAGzB;AAEP,CAAC;AAAA,GAvCYR,OAAO;EAAA,QACmCH,gCAAgC,EAKhDD,6BAA6B,EAIjCD,yBAAyB;AAAA;AAAA,KAV/CK,OAAO;AAyCpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}