{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/Context/DataContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useCallback, useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataReducer = (state, action) => {\n  console.log(state, action);\n  switch (action.type) {\n    case 'fetchStarted':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'fetchSuccess':\n      return {\n        ...state,\n        isLoading: false,\n        error: null,\n        data: action.data\n      };\n    case 'fetchError':\n      return {\n        ...state,\n        isLoading: false,\n        error: action.error\n      };\n    default:\n      throw new Error(`Unhandled action type: ${action}`);\n  }\n};\nexport const DataContext = /*#__PURE__*/createContext({\n  data: null,\n  isLoading: false,\n  error: null,\n  fetch: async () => {}\n});\nexport const DataProvider = _ref => {\n  _s();\n  let {\n    requestMetas,\n    children,\n    initialData\n  } = _ref;\n  const [test, setTest] = useState();\n  const [state, dispatch] = useReducer(dataReducer, {\n    data: null,\n    isLoading: false,\n    error: null\n  });\n  const fetchData = useCallback(async () => {\n    dispatch({\n      type: \"fetchStarted\"\n    });\n    try {\n      const result = axios(requestMetas.url, {\n        ...requestMetas.options\n      }).then(res => {\n        return res;\n      });\n      setTest(result);\n      dispatch({\n        type: \"fetchSuccess\",\n        data: result\n      });\n    } catch (e) {\n      console.log('error');\n      dispatch({\n        type: \"fetchError\",\n        error: e\n      });\n    }\n  }, [requestMetas]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: state,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"ClBM48/mZ+xwqarTEILBO/9cuoc=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["createContext","useReducer","useCallback","useEffect","useState","axios","dataReducer","state","action","console","log","type","isLoading","error","data","Error","DataContext","fetch","DataProvider","requestMetas","children","initialData","test","setTest","dispatch","fetchData","result","url","options","then","res","e"],"sources":["/Users/kerj/Projects/gql-hasura/src/Context/DataContext.tsx"],"sourcesContent":["import { createContext, useReducer, useCallback, useEffect, useState } from \"react\";\nimport axios from 'axios'\n\ntype DataProviderProps<T> = {\n  requestMetas: { url: string, options: any };\n  children: JSX.Element;\n  initialData?: T\n}\n\nexport type DataState<T> = {\n  data: T | null\n  isLoading: boolean,\n  error: Error | null,\n}\n\nexport type DataActions<T> =\n  | { type: 'fetchStarted' }\n  | { type: 'fetchSuccess'; data: T; }\n  | { type: 'fetchError'; error: Error; };\n\ntype DataContextValue<T> = {\n  data: DataState<T>['data'],\n  isLoading: DataState<T>['isLoading'],\n  error: DataState<T>['error'],\n  fetch: () => Promise<void>,\n\n}\n\nconst dataReducer = <T,>(state: DataState<T>, action: DataActions<T>): DataState<T> => {\n  console.log(state, action)\n  switch (action.type) {\n    case 'fetchStarted':\n      return { ...state, isLoading: true, error: null }\n    case 'fetchSuccess':\n      return { ...state, isLoading: false, error: null, data: action.data };\n    case 'fetchError':\n      return { ...state, isLoading: false, error: action.error }\n    default:\n      throw new Error(`Unhandled action type: ${action}`)\n  }\n}\n\nexport const DataContext = createContext<DataContextValue<any>>({\n  data: null,\n  isLoading: false,\n  error: null,\n  fetch: async () => { }\n})\n\nexport const DataProvider = <T,>({ requestMetas, children, initialData }: DataProviderProps<T>) => {\n  const [test, setTest] = useState()\n  const [state, dispatch] = useReducer(dataReducer, {\n    data: null,\n    isLoading: false,\n    error: null\n  });\n\n  const fetchData = useCallback(async () => {\n    dispatch({ type: \"fetchStarted\" });\n    try {\n      const result = axios(requestMetas.url, { ...requestMetas.options }).then(res => {\n        return res\n      });\n      setTest(result)\n      dispatch({ type: \"fetchSuccess\", data: result });\n\n    } catch (e) {\n      console.log('error')\n      dispatch({ type: \"fetchError\", error: e as Error })\n    }\n\n\n\n\n  }, [requestMetas])\n\n  useEffect(() => {\n    fetchData();\n\n  }, [fetchData])\n\n\n  return (\n    <DataContext.Provider value={state as any}>{children}</DataContext.Provider>\n  )\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnF,OAAOC,KAAK,MAAM,OAAO;AAAA;AA2BzB,MAAMC,WAAW,GAAG,CAAKC,KAAmB,EAAEC,MAAsB,KAAmB;EACrFC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAEC,MAAM,CAAC;EAC1B,QAAQA,MAAM,CAACG,IAAI;IACjB,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGJ,KAAK;QAAEK,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACnD,KAAK,cAAc;MACjB,OAAO;QAAE,GAAGN,KAAK;QAAEK,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAE,IAAI;QAAEC,IAAI,EAAEN,MAAM,CAACM;MAAK,CAAC;IACvE,KAAK,YAAY;MACf,OAAO;QAAE,GAAGP,KAAK;QAAEK,SAAS,EAAE,KAAK;QAAEC,KAAK,EAAEL,MAAM,CAACK;MAAM,CAAC;IAC5D;MACE,MAAM,IAAIE,KAAK,CAAE,0BAAyBP,MAAO,EAAC,CAAC;EAAA;AAEzD,CAAC;AAED,OAAO,MAAMQ,WAAW,gBAAGhB,aAAa,CAAwB;EAC9Dc,IAAI,EAAE,IAAI;EACVF,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE,IAAI;EACXI,KAAK,EAAE,YAAY,CAAE;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,QAAuE;EAAA;EAAA,IAAlE;IAAEC,YAAY;IAAEC,QAAQ;IAAEC;EAAkC,CAAC;EAC5F,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,EAAE;EAClC,MAAM,CAACG,KAAK,EAAEiB,QAAQ,CAAC,GAAGvB,UAAU,CAACK,WAAW,EAAE;IAChDQ,IAAI,EAAE,IAAI;IACVF,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMY,SAAS,GAAGvB,WAAW,CAAC,YAAY;IACxCsB,QAAQ,CAAC;MAAEb,IAAI,EAAE;IAAe,CAAC,CAAC;IAClC,IAAI;MACF,MAAMe,MAAM,GAAGrB,KAAK,CAACc,YAAY,CAACQ,GAAG,EAAE;QAAE,GAAGR,YAAY,CAACS;MAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QAC9E,OAAOA,GAAG;MACZ,CAAC,CAAC;MACFP,OAAO,CAACG,MAAM,CAAC;MACfF,QAAQ,CAAC;QAAEb,IAAI,EAAE,cAAc;QAAEG,IAAI,EAAEY;MAAO,CAAC,CAAC;IAElD,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVtB,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBc,QAAQ,CAAC;QAAEb,IAAI,EAAE,YAAY;QAAEE,KAAK,EAAEkB;MAAW,CAAC,CAAC;IACrD;EAKF,CAAC,EAAE,CAACZ,YAAY,CAAC,CAAC;EAElBhB,SAAS,CAAC,MAAM;IACdsB,SAAS,EAAE;EAEb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAGf,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAElB,KAAa;IAAA,UAAEa;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AAEhF,CAAC;AAAA,GApCYF,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}