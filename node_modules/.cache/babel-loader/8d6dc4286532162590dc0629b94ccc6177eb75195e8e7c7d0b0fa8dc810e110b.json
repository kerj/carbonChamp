{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Display.tsx\",\n  _s = $RefreshSig$();\nimport { useApolloClient } from '@apollo/client';\nimport '../App.css';\nimport { GetCustomersLikeNameDocument, useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameQuery } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Search } from './Search';\nimport { Table } from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Display = () => {\n  _s();\n  const client = useApolloClient();\n  const {\n    data\n  } = useGetCustomersLikeNameQuery({\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  // reads from cache for this query\n  const customers = client.readQuery({\n    query: GetCustomersLikeNameDocument,\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only'\n  });\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\"\n  });\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      },\n      refetchQueries: [{\n        query: GetCustomersLikeNameDocument,\n        variables: {\n          limit: 19,\n          first_name_term: \"Le%\"\n        }\n      }]\n    });\n  };\n  const onRemove = () => {\n    deleteCustomerByPkMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\"\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [true && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CallbackButton, {\n        callback: onAdd,\n        text: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CallbackButton, {\n        callback: onRemove,\n        text: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), customers && /*#__PURE__*/_jsxDEV(Table, {\n        data: customers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), true && /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"GQCQh9ZaChhHuHkZBfO7njuSYGA=\", false, function () {\n  return [useApolloClient, useGetCustomersLikeNameQuery, useDeleteCustomerByPkMutation, useCreateCustomerMutation];\n});\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["useApolloClient","GetCustomersLikeNameDocument","useCreateCustomerMutation","useDeleteCustomerByPkMutation","useGetCustomersLikeNameQuery","CallbackButton","Search","Table","Display","client","data","variables","limit","first_name_term","customers","readQuery","query","deleteCustomerByPkMutation","fetchPolicy","createCustomerMutation","onAdd","customer_id","email_address","last_name","first_name","refetchQueries","onRemove"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Display.tsx"],"sourcesContent":["import { gql, useApolloClient } from '@apollo/client';\nimport '../App.css';\nimport { GetCustomersLikeNameDocument, SubGetCustomersLikeNameDocument, useCreateCustomerMutation, useDeleteCustomerByPkMutation, useGetCustomersLikeNameQuery, useSubGetCustomersLikeNameSubscription } from '../generated/graphql';\nimport { CallbackButton } from './CallbackButton';\nimport { Search } from './Search';\nimport { Table } from './Table';\n\nexport type ContextType = {\n  data: {\n    data: {\n      customers: { email_address: string, first_name: string, last_name: string }[]\n    }\n  }\n}\n\nexport const Display = () => {\n  const client = useApolloClient()\n\n  const { data } = useGetCustomersLikeNameQuery({\n    variables: { limit: 19, first_name_term: \"Le%\" },\n  })\n  // reads from cache for this query\n  const customers = client.readQuery({\n    query: GetCustomersLikeNameDocument,\n    variables: { limit: 19, first_name_term: \"Le%\" }\n  })\n\n  const [deleteCustomerByPkMutation] = useDeleteCustomerByPkMutation({\n    fetchPolicy: 'network-only',\n  })\n  const [createCustomerMutation] = useCreateCustomerMutation({\n    fetchPolicy: \"network-only\",\n  })\n  const onAdd = () => {\n    createCustomerMutation({\n      variables: {\n        customer_id: \"this-is-a-customerId\",\n        email_address: \"test@test.com\",\n        last_name: \"James\",\n        first_name: \"LeBron\"\n      },\n      refetchQueries: [{ query: GetCustomersLikeNameDocument, variables: { limit: 19, first_name_term: \"Le%\" } }]\n    })\n  }\n  const onRemove = () => {\n    deleteCustomerByPkMutation({ variables: { customer_id: \"this-is-a-customerId\" } })\n  }\n\n  return (\n    <>\n      {\n        true &&\n        <>\n          <CallbackButton callback={onAdd} text=\"Add\"></CallbackButton>\n          <CallbackButton callback={onRemove} text=\"remove\"></CallbackButton>\n          {customers &&\n            <Table data={customers} />\n          }\n        </>\n      }\n      {true &&\n        <Search />\n      }\n    </>\n  )\n}\n\nexport default Display;"],"mappings":";;AAAA,SAAcA,eAAe,QAAQ,gBAAgB;AACrD,OAAO,YAAY;AACnB,SAASC,4BAA4B,EAAmCC,yBAAyB,EAAEC,6BAA6B,EAAEC,4BAA4B,QAAgD,sBAAsB;AACpO,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,KAAK,QAAQ,SAAS;AAAC;AAAA;AAUhC,OAAO,MAAMC,OAAO,GAAG,MAAM;EAAA;EAC3B,MAAMC,MAAM,GAAGT,eAAe,EAAE;EAEhC,MAAM;IAAEU;EAAK,CAAC,GAAGN,4BAA4B,CAAC;IAC5CO,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EACF;EACA,MAAMC,SAAS,GAAGL,MAAM,CAACM,SAAS,CAAC;IACjCC,KAAK,EAAEf,4BAA4B;IACnCU,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EAEF,MAAM,CAACI,0BAA0B,CAAC,GAAGd,6BAA6B,CAAC;IACjEe,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,sBAAsB,CAAC,GAAGjB,yBAAyB,CAAC;IACzDgB,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAME,KAAK,GAAG,MAAM;IAClBD,sBAAsB,CAAC;MACrBR,SAAS,EAAE;QACTU,WAAW,EAAE,sBAAsB;QACnCC,aAAa,EAAE,eAAe;QAC9BC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE;MACd,CAAC;MACDC,cAAc,EAAE,CAAC;QAAET,KAAK,EAAEf,4BAA4B;QAAEU,SAAS,EAAE;UAAEC,KAAK,EAAE,EAAE;UAAEC,eAAe,EAAE;QAAM;MAAE,CAAC;IAC5G,CAAC,CAAC;EACJ,CAAC;EACD,MAAMa,QAAQ,GAAG,MAAM;IACrBT,0BAA0B,CAAC;MAAEN,SAAS,EAAE;QAAEU,WAAW,EAAE;MAAuB;IAAE,CAAC,CAAC;EACpF,CAAC;EAED,oBACE;IAAA,WAEI,IAAI,iBACJ;MAAA,wBACE,QAAC,cAAc;QAAC,QAAQ,EAAED,KAAM;QAAC,IAAI,EAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAkB,eAC7D,QAAC,cAAc;QAAC,QAAQ,EAAEM,QAAS;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAkB,EAClEZ,SAAS,iBACR,QAAC,KAAK;QAAC,IAAI,EAAEA;MAAU;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA,gBAE3B,EAEJ,IAAI,iBACH,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAEX;AAEP,CAAC;AAAA,GAlDYN,OAAO;EAAA,QACHR,eAAe,EAEbI,4BAA4B,EASRD,6BAA6B,EAGjCD,yBAAyB;AAAA;AAAA,KAf/CM,OAAO;AAoDpB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}