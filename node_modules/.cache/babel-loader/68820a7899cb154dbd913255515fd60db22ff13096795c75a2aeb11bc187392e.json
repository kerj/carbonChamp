{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Table.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"];\nconst typeCheck = data => {\n  return data.customers_stream !== undefined;\n};\nexport const Table = _ref => {\n  let {\n    data\n  } = _ref;\n  const isStreamCustomersByFnSubscription = typeCheck(data);\n  const lookupKey = isStreamCustomersByFnSubscription;\n  const headers = data !== null && data !== void 0 && data.customers[0] ? Object.keys(data.customers[0]) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableContainer\",\n    style: {\n      color: 'black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: headers.map((header, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data && ((data === null || data === void 0 ? void 0 : data.customers) || []).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((header, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: row[header]\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["Headers","typeCheck","data","customers_stream","undefined","Table","isStreamCustomersByFnSubscription","lookupKey","headers","customers","Object","keys","color","map","header","i","row","index","ind"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Table.tsx"],"sourcesContent":["import { StreamCustomersByFnSubscription, SubGetCustomersLikeNameSubscription } from '../generated/graphql';\n\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"] as const;\ntype HeadersTuple = typeof Headers;\ntype Header = HeadersTuple[number]\n\ntype Datatype = StreamCustomersByFnSubscription | SubGetCustomersLikeNameSubscription | undefined\n\nconst typeCheck = (data: Datatype): data is StreamCustomersByFnSubscription => {\n  return (data as StreamCustomersByFnSubscription).customers_stream !== undefined\n}\n\nexport const Table = ({ data }: { data: Datatype }) => {\n  const isStreamCustomersByFnSubscription = typeCheck(data)\n  const lookupKey = isStreamCustomersByFnSubscription\n\n  const headers: Header[] = data?.customers[0] ? Object.keys(data.customers[0]) as Header[] : [];\n  return (\n    <div className='tableContainer' style={{ color: 'black' }}>\n      {\n        <table className='table'>\n          <thead>\n            <tr className='tr'>\n              {headers.map((header, i) => (<th key={i}>{header}</th>))}\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              (data?.customers || []).map((row, index: number) => (\n                <tr key={index}>\n                  {headers.map((header, ind) => (\n                    <td key={ind} className=\"td\">\n                      {row[header]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      }\n    </div>\n  )\n}\n\nexport default Table;"],"mappings":";;AAEA,MAAMA,OAAO,GAAG,CAAC,eAAe,EAAE,YAAY,EAAE,WAAW,CAAU;AAMrE,MAAMC,SAAS,GAAIC,IAAc,IAA8C;EAC7E,OAAQA,IAAI,CAAqCC,gBAAgB,KAAKC,SAAS;AACjF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,QAAkC;EAAA,IAAjC;IAAEH;EAAyB,CAAC;EAChD,MAAMI,iCAAiC,GAAGL,SAAS,CAACC,IAAI,CAAC;EACzD,MAAMK,SAAS,GAAGD,iCAAiC;EAEnD,MAAME,OAAiB,GAAGN,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEO,SAAS,CAAC,CAAC,CAAC,GAAGC,MAAM,CAACC,IAAI,CAACT,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,CAAC,GAAe,EAAE;EAC9F,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAC,KAAK,EAAE;MAAEG,KAAK,EAAE;IAAQ,CAAE;IAAA,uBAEtD;MAAO,SAAS,EAAC,OAAO;MAAA,wBACtB;QAAA,uBACE;UAAI,SAAS,EAAC,IAAI;UAAA,UACfJ,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBAAM;YAAA,UAAaD;UAAM,GAAVC,CAAC;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAC;UAAA;UAAA;UAAA;QAAA;MACrD;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGb,IAAI,IACH,CAAC,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,SAAS,KAAI,EAAE,EAAEI,GAAG,CAAC,CAACG,GAAG,EAAEC,KAAa,kBAC7C;UAAA,UACGT,OAAO,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEI,GAAG,kBACvB;YAAc,SAAS,EAAC,IAAI;YAAA,UACzBF,GAAG,CAACF,MAAM;UAAC,GADLI,GAAG;YAAA;YAAA;YAAA;UAAA,QAGb;QAAC,GALKD,KAAK;UAAA;UAAA;UAAA;QAAA,QAOf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEN;AAEV,CAAC;AAAA,KA/BYZ,KAAK;AAiClB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}