{"ast":null,"code":"var _jsxFileName = \"/Users/kerj/Projects/gql-hasura/src/components/Table.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGetCustomersLikeNameLazyQuery } from '../generated/graphql';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"];\nexport const Table = () => {\n  _s();\n  const [getCustomers, {\n    error\n  }] = useGetCustomersLikeNameLazyQuery({\n    fetchPolicy: 'network-only'\n  });\n  console.log(error);\n  const data = getCustomers({\n    variables: {\n      limit: 19,\n      first_name_term: \"Le%\"\n    }\n  });\n  console.log(data);\n\n  // const headers: Header[] = data?.customers[0] ? Object.keys(data.customers[0]) as Header[] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tableContainer\",\n    style: {\n      color: 'black'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"tr\",\n          children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 39\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data && ((data === null || data === void 0 ? void 0 : data.customers) || []).map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headers.map((header, ind) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"td\",\n            children: row[header]\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Table, \"S+F27xRqvkjt44Zolo3rFO62Cow=\", false, function () {\n  return [useGetCustomersLikeNameLazyQuery];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useGetCustomersLikeNameLazyQuery","Headers","Table","getCustomers","error","fetchPolicy","console","log","data","variables","limit","first_name_term","color","headers","map","header","customers","row","index","ind"],"sources":["/Users/kerj/Projects/gql-hasura/src/components/Table.tsx"],"sourcesContent":["import React from 'react'\nimport { useGetCustomersLikeNameLazyQuery } from '../generated/graphql';\n\nconst Headers = [\"email_address\", \"first_name\", \"last_name\"] as const;\ntype HeadersTuple = typeof Headers;\ntype Header = HeadersTuple[number]\n\nexport const Table = () => {\n  const [getCustomers, { error }] = useGetCustomersLikeNameLazyQuery({\n    fetchPolicy: 'network-only',\n  });\n  console.log(error)\n  const data = getCustomers({\n    variables: { limit: 19, first_name_term: \"Le%\" }\n  })\n\n  console.log(data)\n\n  // const headers: Header[] = data?.customers[0] ? Object.keys(data.customers[0]) as Header[] : [];\n  return (\n    <div className='tableContainer' style={{ color: 'black' }}>\n      {\n        <table className='table'>\n          <thead>\n            <tr className='tr'>\n              {headers.map(header => (<th>{header}</th>))}\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              (data?.customers || []).map((row, index: number) => (\n                <tr key={index}>\n                  {headers.map((header, ind) => (\n                    <td key={ind} className=\"td\">\n                      {row[header]}\n                    </td>\n                  ))}\n                </tr>\n              ))\n            }\n          </tbody>\n        </table>\n      }\n    </div>\n  )\n}\n\nexport default Table;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gCAAgC,QAAQ,sBAAsB;AAAC;AAExE,MAAMC,OAAO,GAAG,CAAC,eAAe,EAAE,YAAY,EAAE,WAAW,CAAU;AAIrE,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,MAAM,CAACC,YAAY,EAAE;IAAEC;EAAM,CAAC,CAAC,GAAGJ,gCAAgC,CAAC;IACjEK,WAAW,EAAE;EACf,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClB,MAAMI,IAAI,GAAGL,YAAY,CAAC;IACxBM,SAAS,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAM;EACjD,CAAC,CAAC;EAEFL,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;;EAEjB;EACA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAC,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAQ,CAAE;IAAA,uBAEtD;MAAO,SAAS,EAAC,OAAO;MAAA,wBACtB;QAAA,uBACE;UAAI,SAAS,EAAC,IAAI;UAAA,UACfC,OAAO,CAACC,GAAG,CAACC,MAAM,iBAAK;YAAA,UAAKA;UAAM;YAAA;YAAA;YAAA;UAAA,QAAO;QAAC;UAAA;UAAA;UAAA;QAAA;MACxC;QAAA;QAAA;QAAA;MAAA,QACC,eACR;QAAA,UACGP,IAAI,IACH,CAAC,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,SAAS,KAAI,EAAE,EAAEF,GAAG,CAAC,CAACG,GAAG,EAAEC,KAAa,kBAC7C;UAAA,UACGL,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEI,GAAG,kBACvB;YAAc,SAAS,EAAC,IAAI;YAAA,UACzBF,GAAG,CAACF,MAAM;UAAC,GADLI,GAAG;YAAA;YAAA;YAAA;UAAA,QAGb;QAAC,GALKD,KAAK;UAAA;UAAA;UAAA;QAAA,QAOf;MAAC;QAAA;QAAA;QAAA;MAAA,QAEE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QAEN;AAEV,CAAC;AAAA,GAtCYhB,KAAK;EAAA,QACkBF,gCAAgC;AAAA;AAAA,KADvDE,KAAK;AAwClB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}